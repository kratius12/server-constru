
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  detectRuntime,
} = require('@prisma/client/runtime/index-browser')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 5.5.2
 * Query Engine version: 78caf6feeaed953168c64e15a249c3e9a033ebe2
 */
Prisma.prismaVersion = {
  client: "5.5.2",
  engine: "78caf6feeaed953168c64e15a249c3e9a033ebe2"
}

Prisma.PrismaClientKnownRequestError = () => {
  throw new Error(`PrismaClientKnownRequestError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  throw new Error(`PrismaClientUnknownRequestError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientRustPanicError = () => {
  throw new Error(`PrismaClientRustPanicError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientInitializationError = () => {
  throw new Error(`PrismaClientInitializationError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientValidationError = () => {
  throw new Error(`PrismaClientValidationError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.NotFoundError = () => {
  throw new Error(`NotFoundError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  throw new Error(`sqltag is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.empty = () => {
  throw new Error(`empty is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.join = () => {
  throw new Error(`join is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.raw = () => {
  throw new Error(`raw is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  throw new Error(`Extensions.getExtensionContext is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.defineExtension = () => {
  throw new Error(`Extensions.defineExtension is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}

/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.CategoriaScalarFieldEnum = {
  idcat: 'idcat',
  nombre: 'nombre',
  estado: 'estado',
  medida: 'medida'
};

exports.Prisma.ClienteScalarFieldEnum = {
  idCli: 'idCli',
  nombre: 'nombre',
  apellidos: 'apellidos',
  email: 'email',
  direccion: 'direccion',
  telefono: 'telefono',
  tipoDoc: 'tipoDoc',
  cedula: 'cedula',
  fecha_nac: 'fecha_nac',
  estado: 'estado',
  constrasena: 'constrasena',
  createdAt: 'createdAt'
};

exports.Prisma.ComprasScalarFieldEnum = {
  idCom: 'idCom',
  fecha: 'fecha',
  imagen: 'imagen',
  total_compra: 'total_compra',
  codigoFactura: 'codigoFactura',
  idProv: 'idProv'
};

exports.Prisma.Compras_detalleScalarFieldEnum = {
  id: 'id',
  idCompra: 'idCompra',
  idMat: 'idMat',
  cantidad: 'cantidad',
  precio: 'precio',
  subtotal: 'subtotal'
};

exports.Prisma.EmpleadoScalarFieldEnum = {
  idEmp: 'idEmp',
  nombre: 'nombre',
  direccion: 'direccion',
  estado: 'estado',
  email: 'email',
  telefono: 'telefono',
  cedula: 'cedula',
  tipoDoc: 'tipoDoc',
  apellidos: 'apellidos',
  contrasena: 'contrasena',
  createdAt: 'createdAt'
};

exports.Prisma.Empleado_especialidadScalarFieldEnum = {
  id: 'id',
  idEmp: 'idEmp',
  idEsp: 'idEsp'
};

exports.Prisma.EspecialidadScalarFieldEnum = {
  id: 'id',
  especialidad: 'especialidad',
  estado: 'estado'
};

exports.Prisma.MaterialesScalarFieldEnum = {
  idMat: 'idMat',
  nombre: 'nombre',
  estado: 'estado',
  idCategoria: 'idCategoria',
  cantidad: 'cantidad'
};

exports.Prisma.ObrasScalarFieldEnum = {
  idObra: 'idObra',
  descripcion: 'descripcion',
  fechaini: 'fechaini',
  fechafin: 'fechafin',
  area: 'area',
  idCliente: 'idCliente',
  estado: 'estado',
  precio: 'precio',
  createdAt: 'createdAt',
  idEmp: 'idEmp'
};

exports.Prisma.PermisoScalarFieldEnum = {
  idPer: 'idPer',
  permiso: 'permiso',
  estado: 'estado'
};

exports.Prisma.ProveedorScalarFieldEnum = {
  idProv: 'idProv',
  nombre: 'nombre',
  direccion: 'direccion',
  nit: 'nit',
  tipo: 'tipo',
  estado: 'estado',
  email: 'email',
  telefono: 'telefono',
  nombreContacto: 'nombreContacto',
  telefonoContacto: 'telefonoContacto',
  emailContacto: 'emailContacto'
};

exports.Prisma.RolScalarFieldEnum = {
  idRol: 'idRol',
  nombre: 'nombre',
  estado: 'estado'
};

exports.Prisma.Detalle_obraScalarFieldEnum = {
  id: 'id',
  actividad: 'actividad',
  fechaini: 'fechaini',
  fechafin: 'fechafin',
  estado: 'estado',
  idObra: 'idObra'
};

exports.Prisma.RolpermisoempleadoScalarFieldEnum = {
  id: 'id',
  idRol: 'idRol',
  idPer: 'idPer',
  idEmp: 'idEmp'
};

exports.Prisma.CodigosScalarFieldEnum = {
  Id: 'Id',
  codigo: 'codigo',
  email: 'email',
  estado: 'estado',
  fecha: 'fecha'
};

exports.Prisma.Actividades_empleadosScalarFieldEnum = {
  id: 'id',
  actividad: 'actividad',
  idEmp: 'idEmp',
  idObra: 'idObra'
};

exports.Prisma.Actividades_materialesScalarFieldEnum = {
  id: 'id',
  actividad: 'actividad',
  idMat: 'idMat',
  cantidad: 'cantidad',
  idObra: 'idObra'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  categoria: 'categoria',
  cliente: 'cliente',
  compras: 'compras',
  compras_detalle: 'compras_detalle',
  empleado: 'empleado',
  empleado_especialidad: 'empleado_especialidad',
  especialidad: 'especialidad',
  materiales: 'materiales',
  obras: 'obras',
  permiso: 'permiso',
  proveedor: 'proveedor',
  rol: 'rol',
  detalle_obra: 'detalle_obra',
  rolpermisoempleado: 'rolpermisoempleado',
  codigos: 'codigos',
  actividades_empleados: 'actividades_empleados',
  actividades_materiales: 'actividades_materiales'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        const runtime = detectRuntime()
        const edgeRuntimeName = {
          'workerd': 'Cloudflare Workers',
          'deno': 'Deno and Deno Deploy',
          'netlify': 'Netlify Edge Functions',
          'edge-light': 'Vercel Edge Functions',
        }[runtime]

        let message = 'PrismaClient is unable to run in '
        if (edgeRuntimeName !== undefined) {
          message += edgeRuntimeName + '. As an alternative, try Accelerate: https://pris.ly/d/accelerate.'
        } else {
          message += 'this browser environment, or has been bundled for the browser (running in `' + runtime + '`).'
        }
        
        message += `
If this is unexpected, please open an issue: https://github.com/prisma/prisma/issues`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
